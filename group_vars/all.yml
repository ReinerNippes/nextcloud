---
# defaults path of your generated credentials (e.g. database, talk, onlyoffice)
# the directory must be writeable for the user running this playbook
credential_store: ~/.nextcloud

# example of rclone config to backup to a s3 bucket

#rclone_remote: |
#      [backup-selfhosted]
#      type = s3
#      provider = AWS
#      env_auth = false
#      access_key_id = AKIxxxxx
#      secret_access_key = QMpoxxxx
#      region = us-east-1
#      acl = private
#      server_side_encryption = AES256
#      storage_class = STANDARD_IA

# redis config
# if inventory_name is localhost unix socket will be useed
redis_socket:
  path:    "/var/run/redis/redis.sock"
  perm:    "770"
redis_tcp:
  address: "{{ hostvars[groups['redis'][0]].ansible_default_ipv4.address }}"
  port:    "6379"

# Some common variables used in more then roles
 
web_user:
  apache:
    RedHat: "apache"
    Debian: "www-data"
  nginx:
    RedHat: "nginx"
    Debian: "nginx"

web_group:
  apache:
    RedHat: "apache"
    Debian: "www-data"
  nginx:
    RedHat: "nginx"
    Debian: "nginx"

systemd_service_path:
  CentOS: '/usr/lib/systemd/system'
  Fedora: '/usr/lib/systemd/system'
  Amazon: '/usr/lib/systemd/system'
  Ubuntu: '/lib/systemd/system'
  Debian: '/lib/systemd/system'

# needed by tls-certificate, webserver and onlyoffice
tls_certificates_directory: "/etc/ssl/private"
tls_key_length: ec-256
tls_cert_file: "{{ tls_certificates_directory }}/{{ nextcloud_fqdn }}{% if tls_key_length is search('^ec-') | bool %}_ecc{% endif %}/{{ nextcloud_fqdn }}.cer"
tls_cert_key: "{{ tls_certificates_directory }}/{{ nextcloud_fqdn }}{% if tls_key_length is search('^ec-') | bool %}_ecc{% endif %}/{{ nextcloud_fqdn }}.key"
tls_cert_fullchain: "{{ tls_certificates_directory }}/{{ nextcloud_fqdn }}{% if tls_key_length is search('^ec-') | bool %}_ecc{% endif %}/fullchain.cer"
tls_cert_csr: "{{ tls_certificates_directory }}/{{ nextcloud_fqdn }}{% if tls_key_length is search('^ec-') | bool %}_ecc{% endif %}/fullchain.csr"
tls_cert_ca: "{{ tls_certificates_directory }}/{{ nextcloud_fqdn }}{% if tls_key_length is search('^ec-') | bool %}_ecc{% endif %}/ca.cer"

tls_test: false