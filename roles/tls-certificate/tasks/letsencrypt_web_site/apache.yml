---

- name: copy dummy cert 
  copy:
    src: "{{ item.file }}"
    dest: "{{ item.target }}"
    owner: root
    group: root
    mode: 0600
  loop:
    - file: apache/localhost.key
      target: /etc/pki/tls/private/localhost.key
    - file: apache/localhost.crt
      target: /etc/pki/tls/certs/localhost.crt
  when: ansible_distribution == 'Amazon'
  notify: restart webserver

- name: enable apache mods for lentsencrypt
  apache2_module:
    name: "{{ item }}"
    state: present
  loop:
    - rewrite
    - headers
    - ssl

- name: letsencrypt config Debian family
  block:
  - name: create letsencrypt config
    copy:
      src: apache/letsencrypt.conf
      dest: "{{ apache_server_root[ansible_os_family] }}/conf-available/letsencrypt.conf"
      owner: root
      group: root
      mode: 0644
  
  - name: enable letsencrypt alias
    file:
      src: "{{ apache_server_root[ansible_os_family] }}/conf-available/letsencrypt.conf"
      dest: "{{ apache_server_root[ansible_os_family] }}/conf-enabled/letsencrypt.conf"
      state: link
  when: ansible_os_family == 'Debian'

- name: letsencrypt config RedHat family
  block:
  - name: create letsencrypt config
    copy:
      src: apache/letsencrypt.conf
      dest: "{{ apache_server_root[ansible_os_family] }}/conf.d/letsencrypt.conf"
      owner: root
      group: root
      mode: 0644
  when: ansible_os_family == 'RedHat'

- name: create letsencrypt web directory
  file:
    name: /var/www/letsencrypt/.well-known
    owner: "{{ web_user[nextcloud_webserver_type][ansible_os_family] }}"
    group: "{{ web_group[nextcloud_webserver_type][ansible_os_family] }}"
    mode: 0755
    state: directory

- name: restart webserver
  systemd:
    name: "{{ webserver_service_name[nextcloud_webserver_type][ansible_os_family] }}"
    state: reloaded
