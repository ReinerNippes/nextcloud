---

# create letsencrypt certificates with acme.sh

- name: check acme.sh is installed
  stat:
    path: "{{ certificates_acmesh_dir }}/acme.sh"
  register: acme

- name: install acme.sh
  block:
  - name: pkg manager spefic tasks
    include_tasks: "{{ ansible_pkg_mgr }}.yml"

  - name: git clone acme.sh
    git:
      repo: 'https://github.com/Neilpang/acme.sh.git'
      dest: '{{ certificates_acmesh_git_dir }}'
      update: no
      version: master

  - name: install acme.sh
    command: |
      ./acme.sh
        --install
        --home "{{ certificates_acmesh_dir }}" 
        --config-home {{ certificates_acmesh_dir }}/conf
        --cert-home {{ tls_certificates_directory }}
    args:
      chdir: "{{ certificates_acmesh_git_dir }}"
      creates: "{{ certificates_acmesh_dir }}/acme.sh"
  when: not acme.stat.exists

- name: preinstall web server tasks
  include_tasks: letsencrypt_web_site/{{ nextcloud_webserver_type }}.yml

- name: get certificates
  command: |
    ./acme.sh
      --issue
      --home {{ certificates_acmesh_dir }}
      --config-home {{ certificates_acmesh_dir }}/conf
      --domain {{ nextcloud_fqdn }}
      --keylength {{ tls_key_length }}
      --cert-home {{ tls_certificates_directory }}
      --webroot /var/www/letsencrypt
      --reloadcmd "systemctl restart {{ webserver_service_name[nextcloud_webserver_type][ansible_os_family] }}"
      {% if tls_test %}--test --debug{% endif %}
  args:
    chdir: "{{ certificates_acmesh_dir }}"
    creates: "{{ tls_cert_file }}"
  register: acme_get
  failed_when: acme_get.rc != 0 and acme_get.rc != 2
  notify: restart web services

- debug: var=acme_get
  when: tls_test

