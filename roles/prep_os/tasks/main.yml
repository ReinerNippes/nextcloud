---
# tasks file for prep_os

- name: include os specific tasks
  include_tasks: "{{ ansible_distribution }}.yml"

- name: create some folders
  file:
    name: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - { path: '/usr/local/tmp/apc',      owner: '{{ web_user[ansible_distribution] }}', group: 'root', mode: '1777' }
    - { path: '/usr/local/tmp/sessions', owner: '{{ web_user[ansible_distribution] }}', group: 'root', mode: '1777' }
    - { path: '/usr/local/tmp/cache',    owner: '{{ web_user[ansible_distribution] }}', group: 'root', mode: '1777' }

- name: get uid of web_user
  user:
    name: "{{ web_user[ansible_distribution] }}"
  register: web_user_id
  
- name: mount tmp fs
  mount:
    src: "tmpfs"
    path: "{{ item }}"
    fstype: tmpfs
    opts: "defaults,noatime,nosuid,nodev,noexec,mode=1777"
    passno: "0"
    state: mounted
  with_items:
    - /tmp
    - /var/tmp

- name: mount tmp fs
  mount:
    src: "tmpfs"
    path: "{{ item }}"
    fstype: tmpfs
    opts: "defaults,uid={{ web_user_id.uid }},size=300M,noatime,nosuid,nodev,noexec,mode=1777"
    passno: "0"
    state: mounted
  with_items:
    - /usr/local/tmp/apc
    - /usr/local/tmp/cache
    - /usr/local/tmp/sessions

- name: sysctl vm.overcommit_memory=1
  sysctl: 
    name: vm.overcommit_memory
    value: "1"
    state: present
    reload: true
    sysctl_file: /etc/sysctl.conf

- name: sysctl -w net.core.somaxconn=65535
  sysctl:
    name: net.core.somaxconn
    value: "65535"
    state: present
    reload: true
    sysctl_file: /etc/sysctl.conf

- name: disable transparent hugepages - copy service file
  copy:
    src: disable-transparent-huge-pages.service
    dest: '{{ service_path[ansible_distribution] }}/disable-transparent-huge-pages.service'
    owner: root
    group: root
    mode: 0644

- name: enable service disable-transparent-hugepages
  service:
    name: disable-transparent-huge-pages.service
    enabled: true
    state: started
    
- name: create symbolic link to /usr/bin/gs
  file:
    src:  /usr/bin/gs
    dest: /usr/local/bin/gs
    state: link
    
- name: change ImageMagick settings
  lineinfile:
    path:   '{{ imagemagick_xml_path[ansible_distribution] }}'
    line:   '  <policy domain="coder" rights="read|write" pattern="{{ item }}" />'
    regexp: '(.*)<policy domain="coder" rights="(.*)" pattern="{{ item }}" />(.*)'
    insertbefore: '</policymap>'
  loop:
    - PS
    - EPI
    - PDF
    - XPS
