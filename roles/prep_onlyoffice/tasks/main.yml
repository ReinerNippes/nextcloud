---
# tasks file for prep_onlyoffice

- name: install onlyoffice app
  become_user: "{{ web_user[ansible_distribution] }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  shell: php occ app:install onlyoffice
  args:
    chdir: /var/www/nextcloud/
    creates: /var/www/nextcloud/apps/onlyoffice
  ignore_errors: true
  
- name: enable onlyoffice app
  become_user: "{{ web_user[ansible_distribution] }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  shell: php occ app:enable onlyoffice
  args:
    chdir: /var/www/nextcloud/
  
- name: set onlyoffice server url
  become_user: "{{ web_user[ansible_distribution] }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  shell: php occ config:app:set onlyoffice DocumentServerUrl --value https://{{ fqdn }}:{{ onlyoffice_ssl_port }}
  args:
    chdir: /var/www/nextcloud/

- name: set onlyoffice server secret
  become_user: "{{ web_user[ansible_distribution] }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  shell: php occ config:app:set onlyoffice jwt_secret --value {{ lookup('password', '{{ credential_store }}/onlyoffice_secret chars=ascii_letters,digits length=32') }}
  args:
    chdir: /var/www/nextcloud/

- name: set onlyoffice cert check off
  become_user: "{{ web_user[ansible_distribution] }}"
  become_flags: "{{ ansible_become_flags | default(omit) }}"
  become: yes
  shell: php occ config:system:set onlyoffice verify_peer_off --value=true --type=boolean 
  args:
    chdir: /var/www/nextcloud/
  when: ssl_certificate_type  == 'selfsigned'

- name: start a onlyoffice container
  docker_container:
    name: onlyoffice
    image: onlyoffice/documentserver
    state: started
    restart: yes
    restart_policy: always
    interactive: true
    tty: yes
    ports:
     - "{{ onlyoffice_ssl_port }}:443"
    env:
      ONLYOFFICE_HTTPS_HSTS_ENABLED: 'false'
      JWT_ENABLED:  'true'
      JWT_SECRET:   "{{ lookup('password', '{{ credential_store }}/onlyoffice_secret chars=ascii_letters,digits length=32') }}"
    volumes:        '{{ onlyoffice_volumes[ssl_certificate_type] }}'

- name: open ufw firewall
  include_role:
    name: prep_ufw
  vars:
    ufw_rules: 
      - { port: '{{ onlyoffice_ssl_port }}', rule: allow }
  when: ansible_os_family == "Debian" or ansible_os_family == "Ubuntu"

- name: open firewalld
  firewalld:
    port: "{{ item }}"
    permanent: true
    immediate: true
    state: enabled
  with_items:
    - '{{ onlyoffice_ssl_port }}/tcp'
  when: ansible_os_family == "Redhat" 

