#!/bin/bash

export RESTIC_REPOSITORY="{{ restic_repo }}"
export RESTIC_PASSWORD="{{ restic_backup_secret }}"

# abort entire script if any command fails
set -e

# Make sure nextcloud is enabled when we are done
trap "sudo -u {{ web_user[nextcloud_webserver_type][ansible_os_family] }} php {{ nextcloud_www_dir }}/occ maintenance:mode --off" EXIT

# set nextcloud to maintenance mode
sudo -u {{ web_user[nextcloud_webserver_type][ansible_os_family] }} php {{ nextcloud_www_dir }}/occ maintenance:mode --on

# unlock restic to keep automatic backup going
{{ restic_install_path }}/restic unlock --cleanup-cache

# backup the database
{% if nextcloud_db_type == 'mysql' %}
mysqldump --single-transaction -h {{ nextcloud_db_host }} -u {{ nextcloud_db_user }} -p{{ nextcloud_db_passwd }} {{ nextcloud_db }} | {{ restic_install_path }}/restic backup --stdin --stdin-filename db_mysql_nextcloud.sql
{% elif nextcloud_db_type == 'pgsql' %}
sudo -u postgres pg_dump -c -U postgres {{ nextcloud_db }} | {{ restic_install_path }}/restic backup --stdin --stdin-filename db_postgres_nextcloud.sql
{% endif %}

# backup the data dir and nextcloud
{{ restic_install_path }}/restic backup {{ nextcloud_data_dir }} {{ nextcloud_www_dir }}

# turn maintenance mode off
sudo -u {{ web_user[nextcloud_webserver_type][ansible_os_family] }} php {{ nextcloud_www_dir }}/occ maintenance:mode --off

# delete trap
trap "" EXIT

# clean up backup dir
{{ restic_install_path }}/restic forget --keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75
{{ restic_install_path }}/restic prune
