---
# tasks file for prep_nextcloud

  - name: generate admin passwd if nextcloud_passwd is empty
    set_fact:
      nc_passwd: "{{ lookup('password', '{{ credential_store }}/nextcloud_admin_secret chars=ascii_letters,digits length=32') }}"
    when: nc_passwd == ''

  - name: download nextcloud archive
    get_url:
      url:  "{{ next_archive }}"
      dest: /tmp/nextcloud.tar.bz2
      checksum: "sha256:{{ next_archive }}.sha256"

  - name: install nextcloud
    unarchive: 
      src: /tmp/nextcloud.tar.bz2
      dest: /var/www
      remote_src: true
      creates: /var/www/nextcloud/occ

  - name: set permissions
    script: permissions.sh
    environment:
      FQDN:       "{{ fqdn }}"
      NC_DATADIR: "{{ nc_datadir }}"
      WEB_USER:   "{{ web_user[ansible_distribution] }}"
      WEB_GROUP:  "{{ web_group[ansible_distribution] }}"

  - name: include selinux tasks
    include_tasks: selinux.yml
    when: 
      - (ansible_os_family == "RedHat")
      - ('status' in ansible_selinux)
      - (ansible_selinux.status == "enabled")

  - name: flush all handlers to restart server
    meta: flush_handlers

  - name: start nginx
    systemd:
      name: nginx
      state: started

  - name: restart redis
    systemd:
      name: redis
      state: restarted

  - name: first setup nextcloud
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: >
      php occ  maintenance:install 
      --database {{ nc_db_type }} 
      --database-host "{{ nc_db_host }}" 
      --database-name {{ nc_db }} 
      --database-table-prefix {{ nc_db_prefix }} 
      --database-user {{ nc_db_user }} 
      --database-pass {{ nc_db_passwd }} 
      --admin-user {{ nc_admin }} 
      --admin-pass {{ nc_passwd }} 
      --data-dir {{ nc_datadir }}
    args:
      chdir: /var/www/nextcloud/
      creates: /var/www/nextcloud/config/config.php
    register: setup_nc
 
  - debug: var=setup_nc verbosity=2
  
  - name: set nextcloud domain config.php values
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: php occ config:system:set {{ item.key }} {{ item.value }}
    args:
      chdir: /var/www/nextcloud/
    with_items: "{{ nc_config }}"

  - name: set nextcloud mail config.php values
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: php occ config:system:set {{ item.key }} {{ item.value }}
    args:
      chdir: /var/www/nextcloud/
    with_items: "{{ nc_mail_config }}"
    when: nc_configure_mail|bool

  - name: copy defaults/config.json to /tmp 
    copy:
      src: "{{ role_path }}/defaults/config.json"
      dest: /tmp/nextcloud.config.json
      owner: "{{ web_user[ansible_distribution] }}"
      mode: 0600
      
  - name: set default config
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: php occ config:import /tmp/nextcloud.config.json
    args:
      chdir: /var/www/nextcloud/
    register: setup_nc

  - name: copy defaults/config.json to /tmp 
    file:
      name: /tmp/nextcloud.config.json
      state: absent

  - debug: var=setup_nc verbosity=2

  - name: backup jobs, upgrade apps and database tuning
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: php occ {{ item }}
    args:
      chdir: /var/www/nextcloud/
    loop:
      - background:cron
      - upgrade
      - db:add-missing-indices
      - db:convert-filecache-bigint
      
  - name: upgrade nextcloud
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: php occ upgrade
    args:
      chdir: /var/www/nextcloud/

  - name: adjust app settings
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: php occ app:{{ item.key }} {{ item.value }}
    args:
      chdir: /var/www/nextcloud/
    with_items: "{{ nc_app_config }}"

  - name: add nextcloud cronjob
    cron:
      name: nextcloud cronjob
      minute: '*/15'
      user: "{{ web_user[ansible_distribution] }}"
      job: "php -f /var/www/nextcloud/cron.php > /dev/null 2>&1"
    
  - name: run nextcloud cronjob
    become_user: "{{ web_user[ansible_distribution] }}"
    become_flags: "{{ ansible_become_flags | default(omit) }}"
    become: yes
    shell: php -f /var/www/nextcloud/cron.php
    args:
      chdir: /var/www/nextcloud/
    when: setup_nc is changed
  