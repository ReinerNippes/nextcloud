---

# apt related OS tasks

- name: add apt key for php repo
  apt_key:
    url: "{{ php_apt_key[ansible_distribution].url | default(omit) }}"
    keyserver: "{{ php_apt_key[ansible_distribution].keyserver | default(omit) }}"
    id: "{{ php_apt_key[ansible_distribution].id | default(omit) }}"
    state: present

- name: add additional php repo
  apt_repository:
    repo: "{{ php_apt_repo_url[ansible_distribution] }}"
    validate_certs: true
    update_cache: true
    state: present

- name: apt dist-upgrade
  apt:
    upgrade: dist
    autoremove: true

- name: install needed php packages
  apt:
    name: "{{ php_package_required[ansible_pkg_mgr] }}"
    state: latest

- name: install optional php packages
  apt:
    name: "{{ php_package_optional[ansible_pkg_mgr] }}"
    state: latest
  when: php_install_optional_packages|bool

- name: configure php postgres module
  copy:
    dest: /etc/php/{{ php_version }}/mods-available/pgsql.ini
    content: |
      # configuration for PHP PostgreSQL module
      extension=pgsql.so
      
      [PostgresSQL]
      pgsql.allow_persistent = On
      pgsql.auto_reset_persistent = Off
      pgsql.max_persistent = -1
      pgsql.max_links = -1
      pgsql.ignore_notice = 0
      pgsql.log_notice = 0
    owner: root
    group: root
    mode: 0644
    backup: true
  when: nextcloud_db_type == 'pgsql'
  notify: restart web services

- name: configure php mysql module
  copy:
    dest: /etc/php/{{ php_version }}/mods-available/pdo_mysql.ini
    content: |
      # configuration for PHP MySQL module
      extension=pdo_mysql.so
      
      [mysql]
      mysql.allow_local_infile=On
      mysql.allow_persistent=On
      mysql.cache_size=2000
      mysql.max_persistent=-1
      mysql.max_links=-1
      mysql.default_port=
      mysql.default_socket=/var/lib/mysql/mysql.sock
      mysql.default_host=
      mysql.default_user=
      mysql.default_password=
      mysql.connect_timeout=60
      mysql.trace_mode=Off
    owner: root
    group: root
    mode: 0644
    backup: true
  when: nextcloud_db_type == 'mysql'
  notify: restart web services

- name: open redis port if remote server
  ufw:
    rule: allow
    port: "{{ redis_tcp.port|int }}"
    proto: tcp
  when: groups['redis'][0] != groups['webserver'][0]
  delegate_to: redis